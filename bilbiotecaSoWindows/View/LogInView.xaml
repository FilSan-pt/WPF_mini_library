<Window x:Class="bilbiotecaSoWindows.View.LogInView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:bilbiotecaSoWindows.View"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="LogInView" Height="300" Width="300">

    <Window.Resources>
        <Style x:Key="txtStyle"> <!-- Para que este style possa ser aplicado a diferentes componentes sem definir um TargetType é necessário
                                      nos setters indicar um componente para a propriedade, durante a execução as propriedades que são 
                                       reconhecidas como comuns entre elementos serão aplicadas e as que não serão ignoradas-->
            <Setter Property="TextBox.Width" Value="200"/>
            <Setter Property="TextBox.Margin" Value="3"/>
            <Setter Property="TextBox.HorizontalAlignment" Value="Center"/>
            <Setter Property="TextBox.BorderBrush" Value="Gray"/>
            <Setter Property="TextBox.BorderThickness" Value="2"/>
            <Setter Property="TextBox.TextAlignment" Value="Center"/>
            <Setter Property="TextBox.FontSize" Value="12"/>
        </Style>

        <Style x:Key="blockStyle" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Collapsed"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=chkAid, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="{Binding ElementName=TXTusername, Path=Text}"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="FontSize" Value="28"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <StackPanel VerticalAlignment="Center">
            <TextBlock Style="{StaticResource blockStyle}" HorizontalAlignment="Center"/>

            <!-- No ViewModel está ligado à propriedade currentUser que é da classe userLogin que contém a propriedade username e a propriedade password -->
            <TextBox x:Name="TXTusername" Style="{StaticResource txtStyle}" Text = "{Binding Path=logInUser.username, UpdateSourceTrigger=PropertyChanged}" />

            <PasswordBox x:Name="txtPass" Style="{Binding Style, ElementName=TXTusername}" />

            <CheckBox x:Name="chkAid" Margin="3" HorizontalAlignment="Center" BorderBrush="Gray" BorderThickness="2" Content="Visually Impaired"/>

            <!-- PasswordBox não é um componente em que seja possível dependências, ou seja, biding como tal foi retirado do ViewModel
                 código do LogIn e mudado para o CodeBehind, fora este operação de autenticação do User mantem-se o ViewModel para 
                 qualquer outra interação-->
            <Button x:Name="submeterLogin" Width="100" Margin="3" Click="submeterLogin_Click">
                Iniciar Sessão
            </Button>

        </StackPanel>
    </Grid>
</Window>
